{
	"id": "65ff740589df9356e39a62e6ee120552",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Etherium/Constract.sol": {
				"content": "// SPDX-Li\n\npragma solidity ^0.8.7;\n\n\ncontract Bebra {\n    address owner;\n\n    constructor () {\n        owner = msg.sender;\n    }\n\n    function sendMoney() public payable {}\n\n    function getMoney() public {\n        address payable to = payable(owner);\n        to.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Etherium/Constract.sol": {
				"Bebra": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Etherium/Constract.sol\":38:304  contract Bebra {... */\n  mstore(0x40, 0x80)\n    /* \"Etherium/Constract.sol\":79:129  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Etherium/Constract.sol\":112:122  msg.sender */\n  caller\n    /* \"Etherium/Constract.sol\":104:109  owner */\n  0x00\n  dup1\n    /* \"Etherium/Constract.sol\":104:122  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Etherium/Constract.sol\":38:304  contract Bebra {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Etherium/Constract.sol\":38:304  contract Bebra {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98e1b410\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xcbedbf5a\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Etherium/Constract.sol\":179:302  function getMoney() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"Etherium/Constract.sol\":135:173  function sendMoney() public payable {} */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Etherium/Constract.sol\":179:302  function getMoney() public {... */\n    tag_6:\n        /* \"Etherium/Constract.sol\":216:234  address payable to */\n      0x00\n        /* \"Etherium/Constract.sol\":245:250  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Etherium/Constract.sol\":216:251  address payable to = payable(owner) */\n      swap1\n      pop\n        /* \"Etherium/Constract.sol\":261:263  to */\n      dup1\n        /* \"Etherium/Constract.sol\":261:272  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Etherium/Constract.sol\":261:295  to.transfer(address(this).balance) */\n      0x08fc\n        /* \"Etherium/Constract.sol\":273:294  address(this).balance */\n      selfbalance\n        /* \"Etherium/Constract.sol\":261:295  to.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"Etherium/Constract.sol\":206:302  {... */\n      pop\n        /* \"Etherium/Constract.sol\":179:302  function getMoney() public {... */\n      jump\t// out\n        /* \"Etherium/Constract.sol\":135:173  function sendMoney() public payable {} */\n    tag_8:\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dcc7b20f516447490120c954972736f5c935a6733b98ccb8224f74f519c155ca64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060ee8061005f6000396000f3fe60806040526004361060265760003560e01c806398e1b41014602b578063cbedbf5a14603f575b600080fd5b348015603657600080fd5b50603d6047565b005b604560b6565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801560b2573d6000803e3d6000fd5b5050565b56fea2646970667358221220dcc7b20f516447490120c954972736f5c935a6733b98ccb8224f74f519c155ca64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xEE DUP1 PUSH2 0x5F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98E1B410 EQ PUSH1 0x2B JUMPI DUP1 PUSH4 0xCBEDBF5A EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3D PUSH1 0x47 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0xB6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0xB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC7 0xB2 0xF MLOAD PUSH5 0x47490120C9 SLOAD SWAP8 0x27 CALLDATASIZE CREATE2 0xC9 CALLDATALOAD 0xA6 PUSH20 0x3B98CCB8224F74F519C155CA64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "38:266:0:-:0;;;79:50;;;;;;;;;;112:10;104:5;;:18;;;;;;;;;;;;;;;;;;38:266;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getMoney_37": {
									"entryPoint": 71,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendMoney_16": {
									"entryPoint": 182,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361060265760003560e01c806398e1b41014602b578063cbedbf5a14603f575b600080fd5b348015603657600080fd5b50603d6047565b005b604560b6565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801560b2573d6000803e3d6000fd5b5050565b56fea2646970667358221220dcc7b20f516447490120c954972736f5c935a6733b98ccb8224f74f519c155ca64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98E1B410 EQ PUSH1 0x2B JUMPI DUP1 PUSH4 0xCBEDBF5A EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3D PUSH1 0x47 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0xB6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0xB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC7 0xB2 0xF MLOAD PUSH5 0x47490120C9 SLOAD SWAP8 0x27 CALLDATASIZE CREATE2 0xC9 CALLDATALOAD 0xA6 PUSH20 0x3B98CCB8224F74F519C155CA64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "38:266:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;179:123;;;;;;;;;;;;;:::i;:::-;;135:38;;;:::i;:::-;;179:123;216:18;245:5;;;;;;;;;;;216:35;;261:2;:11;;:34;273:21;261:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;206:96;179:123::o;135:38::-;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47600",
								"executionCost": "24365",
								"totalCost": "71965"
							},
							"external": {
								"getMoney()": "infinite",
								"sendMoney()": "120"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38,
									"end": 304,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 38,
									"end": 304,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38,
									"end": 304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79,
									"end": 129,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79,
									"end": 129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79,
									"end": 129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 112,
									"end": 122,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 104,
									"end": 109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 104,
									"end": 122,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 104,
									"end": 122,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 104,
									"end": 122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 122,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 304,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38,
									"end": 304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 304,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38,
									"end": 304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 304,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38,
									"end": 304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 304,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dcc7b20f516447490120c954972736f5c935a6733b98ccb8224f74f519c155ca64736f6c63430008070033",
									".code": [
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "98E1B410"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "CBEDBF5A"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 173,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 216,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 273,
											"end": 294,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 173,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getMoney()": "98e1b410",
							"sendMoney()": "cbedbf5a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Etherium/Constract.sol\":\"Bebra\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Etherium/Constract.sol\":{\"keccak256\":\"0xe8953f75ad93be9d1a235121b3150f5a81101934f5f1ebf4c975f3bf160597bf\",\"urls\":[\"bzz-raw://cc3524a22bd898fb029252c9d760ea7cf89e541dbfb43d131b9763aab4678d3e\",\"dweb:/ipfs/QmbowkWGopK8YhUp7hsy1yCuXCVZiPTuHzvxBgpzPwLDVk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Etherium/Constract.sol:Bebra",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Etherium/Constract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Etherium/Constract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Etherium/Constract.sol": {
				"ast": {
					"absolutePath": "Etherium/Constract.sol",
					"exportedSymbols": {
						"Bebra": [
							38
						]
					},
					"id": 39,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "12:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "Bebra",
							"nameLocation": "47:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "67:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "59:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "59:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "94:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "104:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "104:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "104:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "91:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:0:0"
									},
									"scope": 38,
									"src": "79:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "171:2:0",
										"statements": []
									},
									"functionSelector": "cbedbf5a",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendMoney",
									"nameLocation": "144:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "153:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:0"
									},
									"scope": 38,
									"src": "135:38:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "206:96:0",
										"statements": [
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "to",
														"nameLocation": "232:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "216:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 19,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "216:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"arguments": [
														{
															"id": 23,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "245:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "237:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 21,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "237:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "237:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "216:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "281:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Bebra_$38",
																			"typeString": "contract Bebra"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Bebra_$38",
																			"typeString": "contract Bebra"
																		}
																	],
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "273:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 29,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "273:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "273:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "273:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 26,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "261:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "261:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "261:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "261:34:0"
											}
										]
									},
									"functionSelector": "98e1b410",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMoney",
									"nameLocation": "188:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "206:0:0"
									},
									"scope": 38,
									"src": "179:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "38:266:0",
							"usedErrors": []
						}
					],
					"src": "12:292:0"
				},
				"id": 0
			}
		}
	}
}